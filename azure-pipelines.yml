# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
- name: RunTests
  default: true

trigger: none
pr: none

pool:
    vmImage: 'ubuntu-20.04'

jobs:
- job: RunTests
  strategy: 
    maxParallel: 100
    matrix:
      Helm_3_1_1:
        HelmVersion: "3.1.1"
        NoLint: true
      Helm_3_1_2:
        HelmVersion: "3.1.2"
        NoLint: true
      Helm_3_1_3:
        HelmVersion: "3.1.3"
        NoLint: true
      Helm_3_2_0: 
        HelmVersion: "3.2.0"
        NoLint: true
      Helm_3_2_1: 
        HelmVersion: "3.2.1"
        NoLint: true
      Helm_3_2_2: 
        HelmVersion: "3.2.2"
        NoLint: true
      Helm_3_2_3: 
        HelmVersion: "3.2.3"
        NoLint: true
      Helm_3_2_4: 
        HelmVersion: "3.2.4"
        NoLint: true
      Helm_3_3_0: 
        HelmVersion: "3.3.0"
      Helm_3_3_1:
        HelmVersion: "3.3.1"
      Helm_3_3_2: 
        HelmVersion: "3.3.2"
      Helm_3_3_3: 
        HelmVersion: "3.3.3"
      Helm_3_3_4: 
        HelmVersion: "3.3.4"
      Helm_3_4_0: 
        HelmVersion: "3.4.0"
      Helm_3_4_1: 
        HelmVersion: "3.4.1"
      Helm_3_4_2: 
        HelmVersion: "3.4.2"
      Helm_3_5_0: 
        HelmVersion: "3.5.0"
      Helm_3_5_1: 
        HelmVersion: "3.5.1"
      Helm_3_5_2: 
        HelmVersion: "3.5.2"
      Helm_3_5_3: 
        HelmVersion: "3.5.3"
      Helm_3_5_4: 
        HelmVersion: "3.5.4"
      Helm_3_6_0: 
        HelmVersion: "3.6.0"
      Helm_3_6_1: 
        HelmVersion: "3.6.1"
      Helm_3_6_2: 
        HelmVersion: "3.6.2"
      Helm_3_6_3: 
        HelmVersion: "3.6.3"
      Helm_3_7_0: 
        HelmVersion: "3.7.0"
      Helm_3_7_1: 
        HelmVersion: "3.7.1"
      Helm_3_7_2: 
        HelmVersion: "3.7.2"
      Helm_3_8_0: 
        HelmVersion: "3.8.0"
      Helm_3_8_1: 
        HelmVersion: "3.8.1"
      Helm_3_8_2: 
        HelmVersion: "3.8.2"
      Helm_3_9_0: 
        HelmVersion: "3.9.0"
      Helm_3_9_1: 
        HelmVersion: "3.9.1"
      Helm_3_9_2: 
        HelmVersion: "3.9.2"
      Helm_3_9_3: 
        HelmVersion: "3.9.3"
      Helm_3_9_4: 
        HelmVersion: "3.9.4"
      Helm_3_10_0: 
        HelmVersion: "3.10.0"
      Helm_3_10_1: 
        HelmVersion: "3.10.1"
      Helm_3_10_2: 
        HelmVersion: "3.10.2"
  
  steps:
  - template: azure-pipelines-test.yml  # Template reference
    parameters:
      RunTests: ${{ parameters.RunTests }}

- job: CreateRelease
  dependsOn: RunTests
  steps:
  
  - script: |
        set -euo pipefail
        echo "-> get chartreleaser"
        cp -r . $(Agent.TempDirectory)
        cd $(Agent.TempDirectory)
        wget https://github.com/helm/chart-releaser/releases/download/v1.1.1/chart-releaser_1.1.1_linux_amd64.tar.gz
        tar -xvzf chart-releaser_1.1.1_linux_amd64.tar.gz -C ./
        ls
        sudo chmod +x ./cr
        echo "-> create hull-demo chart"
        export HULL_VERSION=`sed -n 's/^version:\s//p' ./hull/Chart.yaml` 
        echo "-> hull version is ${HULL_VERSION}"
        mkdir ./hull-demo
        cp ./hull/files/test/HULL/sources/cases/deployment/values_short_demo.hull.yaml ./hull-demo/values.yaml
        echo "This is a Helm chart for demonstration of the HULL library." > ./hull-demo/README.md
        echo "" >> ./hull-demo/README.md
        echo "It can also be used as a bootstrapped parent chart already fully integrating HULL." >> ./hull-demo/README.md
        cp ./hull/LICENSE ./hull-demo/LICENSE
        mkdir ./hull-demo/templates
        cp ./hull/hull.yaml ./hull-demo/templates/hull.yaml
        cp ./hull/Chart.yaml ./hull-demo/Chart.yaml
        sed -i 's/name: hull/name: hull-demo/' ./hull-demo/Chart.yaml
        sed -i 's/description: HULL - Helm Uniform Layer Library/description: Demo Chart for showcasing HULL library chart usage/' ./hull-demo/Chart.yaml
        sed -i 's/type: library/type: application/' ./hull-demo/Chart.yaml
        sed -i "/dependencies: \[\]/d" ./hull-demo/Chart.yaml
        echo ""
        echo "dependencies:" >> ./hull-demo/Chart.yaml
        echo "- name: hull" >> ./hull-demo/Chart.yaml
        echo "  version: ${HULL_VERSION}" >> ./hull-demo/Chart.yaml
        echo "  repository: \"https://vidispine.github.io/hull\"" >> ./hull-demo/Chart.yaml
        echo "-> Chart.yaml:"
        cat ./hull-demo/Chart.yaml 
        echo "<- Chart.yaml"
        echo "-> package hull chart"        
        sudo ./cr package ./hull
        echo "-> upload hull chart"
        sudo ./cr upload --git-repo hull --owner vidispine --token $(GITHUBTOKEN) || true
        mkdir .cr-index
        wget https://vidispine.github.io/hull/index.yaml -O .cr-index/index.yaml
        sudo ./cr index --git-repo hull --owner vidispine --token $(GITHUBTOKEN) --charts-repo https://vidispine.github.io/hull --push 
        find . -name 'hull\.*\.tgz' -delete
        sudo rm -rf .cr-release-packages
        rm -rf ./hull
        echo "-> test chart"
        helm template hull-demo      
        echo "-> package hull-demo chart"  
        sudo ./cr package ./hull-demo 
        echo "-> upload hull-demo chart"
        sudo ./cr upload --git-repo hull --owner vidispine --token $(GITHUBTOKEN) || true
        sudo rm -rf .cr-index
        mkdir .cr-index
        wget https://vidispine.github.io/hull/index.yaml -O .cr-index/index.yaml
        sudo ./cr index --git-repo hull --owner vidispine --token $(GITHUBTOKEN) --charts-repo https://vidispine.github.io/hull --push 
