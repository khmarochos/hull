# Check pod functionality

* Prepare default test case for this kind including suites "pod,noimagepullsecrets"
* Render

* Set test object to "release-name-hull-test-service_account"
* Test Object has key "spec§template§spec§serviceAccountName" with value "another_account"


* Set test object to "release-name-hull-test-imagepullsecrets_add_all"
* Test Object does not have key "spec§template§spec§imagePullSecrets"



* Prepare default test case for this kind including suites "pod,imagepullsecretsfromfirstregistry"
* Render

* Set test object to "release-name-hull-test-image_name_empty_registry"
* Test Object has key "spec§template§spec§containers§0§image" with value "example.cr.io/my/image/repo"

* Set test object to "release-name-hull-test-image_name_tag"
* Test Object has key "spec§template§spec§containers§0§image" with value "example.cr.io/my/image/repo:99.9"



* Prepare default test case for this kind including suites "pod,imagepullsecretsfromregistryname"
* Render

* Set test object to "release-name-hull-test-image_name_empty_registry"
* Test Object has key "spec§template§spec§containers§0§image" with value "local.cr.io/my/image/repo"

* Set test object to "release-name-hull-test-image_name_tag"
* Test Object has key "spec§template§spec§containers§0§image" with value "local.cr.io/my/image/repo:99.9"



* Prepare default test case for this kind including suites "pod"
* Render

* Set test object to "release-name-hull-test-imagepullsecrets_add_all"
* Test Object has key "spec§template§spec§imagePullSecrets§0§name" with value "release-name-hull-test-example_registry"
* Test Object has key "spec§template§spec§imagePullSecrets§1§name" with value "release-name-hull-test-local_registry"

* Set test object to "release-name-hull-test-image_name_empty_registry"

* Set test object to "release-name-hull-test-image_name_empty_registry"
* Test Object has key "spec§template§spec§containers§0§image" with value "my/image/repo"

* Set test object to "release-name-hull-test-image_name_registry"
* Test Object has key "spec§template§spec§containers§0§image" with value "local.registry/my/image/repo"

* Set test object to "release-name-hull-test-custom_args"
* Test Object has key "spec§template§spec§containers§0§args§0" with value "--this-is-defined"
* Test Object has key "spec§template§spec§containers§0§args§1" with value "--hence-is-this"
* Test Object has key "spec§template§spec§containers§0§args§2" with value "--and-this-because-other-is-not-defined"

* Set test object to "release-name-hull-test-image_name_tag"
* Test Object has key "spec§template§spec§containers§0§image" with value "my/image/repo:99.9"

* Set test object to "release-name-hull-test-removal_test"
* Test Object has key "spec§template§spec§containers" with array value that has "1" items
* Test Object has key "spec§template§spec§containers§0§ports" with array value that has "1" items

* Set test object to "release-name-hull-test-volume_test"
* Test Object has key "spec§template§spec§volumes" with array value that has "8" items
* Test Object has key "spec§template§spec§volumes§0§name" with value "azure_disk_volume"
* Test Object has key "spec§template§spec§volumes§0§azureDisk§diskName" with value "myDisk"
* Test Object has key "spec§template§spec§volumes§0§azureDisk§diskURI" with value "uri://theDisk"
* Test Object has key "spec§template§spec§volumes§1§name" with value "configmap_volume"
* Test Object has key "spec§template§spec§volumes§1§configMap§name" with value "release-name-hull-test-a_configmap"
* Test Object has key "spec§template§spec§volumes§1§configMap§defaultMode" with integer value "12"
* Test Object has key "spec§template§spec§volumes§2§name" with value "configmap_volume_static"
* Test Object has key "spec§template§spec§volumes§2§configMap§name" with value "a_static_configmap"
* Test Object has key "spec§template§spec§volumes§2§configMap§defaultMode" with integer value "22"
* Test Object has key "spec§template§spec§volumes§3§name" with value "nfs_volume"
* Test Object has key "spec§template§spec§volumes§3§nfs§path" with value "local_nfs_path"
* Test Object has key "spec§template§spec§volumes§3§nfs§server" with value "nfs-host.mydomain.com"
* Test Object has key "spec§template§spec§volumes§4§name" with value "pvc_volume"
* Test Object has key "spec§template§spec§volumes§4§persistentVolumeClaim§claimName" with value "release-name-hull-test-a_claim"
* Test Object has key "spec§template§spec§volumes§4§persistentVolumeClaim§readOnly" set to true
* Test Object has key "spec§template§spec§volumes§5§name" with value "pvc_volume_static"
* Test Object has key "spec§template§spec§volumes§5§persistentVolumeClaim§claimName" with value "a_static_claim"
* Test Object has key "spec§template§spec§volumes§6§name" with value "secret_volume"
* Test Object has key "spec§template§spec§volumes§6§secret§secretName" with value "release-name-hull-test-a_secret"
* Test Object has key "spec§template§spec§volumes§7§name" with value "secret_volume_static"
* Test Object has key "spec§template§spec§volumes§7§secret§secretName" with value "a_static_secret"
* Test Object has key "spec§template§spec§volumes§7§secret§defaultMode" with integer value "42"

* Set test object to "release-name-hull-test-env_test"
* Test Object has key "spec§template§spec§containers§0§env§0§name" with value "ENV_VAR_CONFIGMAP"
* Test Object has key "spec§template§spec§containers§0§env§0§valueFrom§configMapKeyRef§key" with value "the_configmap_key"
* Test Object has key "spec§template§spec§containers§0§env§0§valueFrom§configMapKeyRef§name" with value "release-name-hull-test-env_configmap_name"
* Test Object has key "spec§template§spec§containers§0§env§1§name" with value "ENV_VAR_CONFIGMAP_STATIC"
* Test Object has key "spec§template§spec§containers§0§env§1§valueFrom§configMapKeyRef§key" with value "the_configmap_static_key"
* Test Object has key "spec§template§spec§containers§0§env§1§valueFrom§configMapKeyRef§name" with value "env_configmap_name_static"
* Test Object has key "spec§template§spec§containers§0§env§1§valueFrom§configMapKeyRef§optional" set to true
* Test Object has key "spec§template§spec§containers§0§env§2§name" with value "ENV_VAR_FIELD"
* Test Object has key "spec§template§spec§containers§0§env§2§valueFrom§fieldRef§fieldPath" with value "metadata.field"
* Test Object has key "spec§template§spec§containers§0§env§2§valueFrom§fieldRef§apiVersion" with value "v1"
* Test Object has key "spec§template§spec§containers§0§env§3§name" with value "ENV_VAR_RESOURCE"
* Test Object has key "spec§template§spec§containers§0§env§3§valueFrom§resourceFieldRef§resource" with value "container"
* Test Object has key "spec§template§spec§containers§0§env§3§valueFrom§resourceFieldRef§containerName" with value "main_container"
* Test Object has key "spec§template§spec§containers§0§env§3§valueFrom§resourceFieldRef§divisor" with value "5"
* Test Object has key "spec§template§spec§containers§0§env§4§name" with value "ENV_VAR_SECRET"
* Test Object has key "spec§template§spec§containers§0§env§4§valueFrom§secretKeyRef§key" with value "the_secret_key"
* Test Object has key "spec§template§spec§containers§0§env§4§valueFrom§secretKeyRef§name" with value "release-name-hull-test-env_secret_name"
* Test Object has key "spec§template§spec§containers§0§env§5§name" with value "ENV_VAR_SECRET_STATIC"
* Test Object has key "spec§template§spec§containers§0§env§5§valueFrom§secretKeyRef§key" with value "the_secret_static_key"
* Test Object has key "spec§template§spec§containers§0§env§5§valueFrom§secretKeyRef§name" with value "env_secret_name"
* Test Object has key "spec§template§spec§containers§0§env§5§valueFrom§secretKeyRef§optional" set to true
* Test Object has key "spec§template§spec§containers§0§env§6§name" with value "ENV_VAR_VALUE"
* Test Object has key "spec§template§spec§containers§0§env§6§value" with value "plain_value"

* Set test object to "release-name-hull-test-envfrom_test"
* Test Object has key "spec§template§spec§containers§0§envFrom§0§configMapRef§name" with value "release-name-hull-test-a_configmap"
* Test Object has key "spec§template§spec§containers§0§envFrom§0§secretRef§name" with value "release-name-hull-test-a_secret"
* Test Object has key "spec§template§spec§containers§0§envFrom§1§configMapRef§name" with value "release-name-hull-test-envfrom_configmap_name"
* Test Object has key "spec§template§spec§containers§0§envFrom§1§configMapRef§optional" set to true
* Test Object has key "spec§template§spec§containers§0§envFrom§2§configMapRef§name" with value "envfrom_configmap_name_static"
* Test Object has key "spec§template§spec§containers§0§envFrom§3§prefix" with value "a_prefix"
* Test Object has key "spec§template§spec§containers§0§envFrom§3§secretRef§name" with value "release-name-hull-test-envfrom_secret_name"
* Test Object has key "spec§template§spec§containers§0§envFrom§3§secretRef§optional" set to true
* Test Object has key "spec§template§spec§containers§0§envFrom§4§secretRef§name" with value "envfrom_secret_name_static"
* Test Object has key "spec§template§spec§containers§0§envFrom§5§secretRef§name" with value "a_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooong_secret_name"